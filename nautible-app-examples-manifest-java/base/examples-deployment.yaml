apiVersion: apps/v1
kind: Deployment
metadata:
  name: nautible-app-examples-java
  namespace: nautible-app-examples
  labels:
    app.kubernetes.io/name: nautible-app-examples-java
    app.kubernetes.io/instance: nautible-app-examples-java
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/component: app
    app.kubernetes.io/part-of: nautible
    app.kubernetes.io/managed-by: manual
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: nautible-app-examples-java
      app.kubernetes.io/component: app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nautible-app-examples-java
        app.kubernetes.io/instance: nautible-app-examples-java
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/component: app
        app.kubernetes.io/part-of: nautible
        app.kubernetes.io/managed-by: manual
    spec:
      containers:
      - name: nautible-app-examples-java
        image: public.ecr.aws/nautible/nautible-app-examples-java:dummy
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - all
        volumeMounts:
        - mountPath: /tmp
          name: tmp-nautible-app-examples-mount
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - name: http
          protocol: TCP
          containerPort: 8080
        livenessProbe:
          httpGet:
            port: 8080
            path: /q/health/live
          failureThreshold: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            port: 8080
            path: /q/health/ready
          failureThreshold: 10
          periodSeconds: 30
      volumes:
      - name: tmp-nautible-app-examples-mount
        hostPath:
          path: /tmp
